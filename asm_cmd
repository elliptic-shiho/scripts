#!/usr/bin/python

from subprocess import Popen, PIPE
import sys
import code
import readline

class AsmConsole(code.InteractiveConsole):
  def __init__(self, local=None, filename="<console>"):
    code.InteractiveConsole.__init__(self, local, filename)
    readline.parse_and_bind("tab: complete")

  def push(self, line):
    if "quit" in line:
      sys.exit(0)

    open("/tmp/temp.s", "w").write("[BITS 32]\n" + line.replace(";", "\n"))
    p = Popen(["nasm", "/tmp/temp.s"], stdout=PIPE)
    while 1:
      l = p.stdout.readline()
      if not l:
        break
      print l
    p.wait()

    p = Popen(["ndisasm", "-b", "32", "/tmp/temp"], stdout=PIPE)
    while 1:
      l = p.stdout.readline()
      if not l:
        break
      print l.rstrip()
    p.wait()

asm_console = AsmConsole()
sys.ps1 = "(asm) >>> "
sys.ps2 = "--------> "
asm_console.interact("### Welcome to Assembler Console ###")
